name: IndexNow Submit + Sitemap Update (contraco.ru)

on:
  push:
    branches: [ main ]
    paths:
      - '**/*.html'
      - '**/*.htm'
  workflow_dispatch:

permissions:
  contents: write

env:
  DOMAIN: https://contraco.ru

jobs:
  submit-and-update-sitemap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          persist-credentials: true
          # token defaults to ${{ github.token }} which honors permissions above

      - name: Get changed HTML files (paths -> normalized URLs)
        id: changed-files
        shell: bash
        run: |
          set -euo pipefail

          # Collect A/M/R changes (use new path for renames)
          git diff --name-status -M HEAD~1 HEAD \
          | awk '
            BEGIN { IGNORECASE=1 }
            $1 ~ /^(A|M)$/ && $2 ~ /\.(html|htm)$/ {print $2}
            $1 ~ /^R/        && $3 ~ /\.(html|htm)$/ {print $3}
          ' > changed_paths.txt || true

          # Fallback: name-only for modified files
          git diff --name-only HEAD~1 HEAD \
          | grep -Ei '\\.(html|htm)$' >> changed_paths.txt || true

          # Drop .git and 404 pages; dedupe
          grep -Ev '^\\.git/|/\\.git/|(^|/)404\\.(html|htm)$' changed_paths.txt 2>/dev/null \
          | sort -u > changed_paths.clean.txt || true

          # Normalization function (same as sitemap)
          normalize() {
            local path="$1"
            path="${path#./}"
            local url="${DOMAIN}/${path}"
            url="${url%/index.html}"
            url="${url%/index.htm}"
            if [[ "$path" == "index.html" || "$path" == "index.htm" ]]; then
              url="${DOMAIN}"
            fi
            printf '%s\n' "$url"
          }

          : > urls_to_submit.txt
          if [[ -s changed_paths.clean.txt ]]; then
            while IFS= read -r p; do
              normalize "$p"
            done < changed_paths.clean.txt \
            | sort -u > urls_to_submit.txt

            echo "URLs to submit to IndexNow:"
            cat urls_to_submit.txt
            echo "found_files=true" >> "$GITHUB_OUTPUT"
          else
            echo "No HTML/HTM changes detected."
            echo "found_files=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate sitemap.xml (same normalization)
        shell: bash
        run: |
          set -euo pipefail

          normalize() {
            local path="$1"
            path="${path#./}"
            local url="${DOMAIN}/${path}"
            url="${url%/index.html}"
            url="${url%/index.htm}"
            if [[ "$path" == "index.html" || "$path" == "index.htm" ]]; then
              url="${DOMAIN}"
            fi
            printf '%s\n' "$url"
          }

          echo "Generating sitemap.xml..."
          : > sitemap.xml
          printf '%s\n' '<?xml version="1.0" encoding="UTF-8"?>' >> sitemap.xml
          printf '%s\n' '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">' >> sitemap.xml

          # Find all html/htm files, exclude .git and 404 pages
          find . \( -name "*.html" -o -name "*.htm" \) \
            -not -path "./.git/*" \
            -not -name "404.html" \
            -not -name "404.htm" \
          | sort \
          | while read -r file; do
              url="$(normalize "$file")"
              # lastmod portable: prefer date -r, fallback to stat
              lastmod="$(date -r "$file" +"%Y-%m-%d" 2>/dev/null || stat -c %y "$file" | cut -d' ' -f1)"
              {
                printf '  <url>\n'
                printf '    <loc>%s</loc>\n' "$url"
                printf '    <lastmod>%s</lastmod>\n' "$lastmod"
                printf '    <changefreq>weekly</changefreq>\n'
                printf '    <priority>0.8</priority>\n'
                printf '  </url>\n'
              } >> sitemap.xml
            done

          printf '%s\n' '</urlset>' >> sitemap.xml
          echo "Generated sitemap with $(grep -c '<url>' sitemap.xml) URLs"

      - name: Install jq
        if: steps.changed-files.outputs.found_files == 'true'
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Submit to IndexNow
        if: steps.changed-files.outputs.found_files == 'true'
        env:
          INDEXNOW_KEY: ${{ secrets.INDEXNOW_KEY_CONTRACO_RU }}
        shell: bash
        run: |
          set -euo pipefail
          if [[ -s urls_to_submit.txt ]]; then
            urls_json=$(jq -R -s -c 'split("\n")[:-1]' urls_to_submit.txt)
            echo "Submitting to IndexNow API..."
            response=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X POST "https://api.indexnow.org/indexnow" \
              -H "Content-Type: application/json" \
              -d '{
                "host": "contraco.ru",
                "key": "'"${INDEXNOW_KEY}"'",
                "keyLocation": "https://contraco.ru/'"${INDEXNOW_KEY}"'.txt",
                "urlList": '"$urls_json"'
              }')
            http_code=$(echo "$response" | awk -F: '/HTTP_CODE:/ {print $2}')
            if [[ "$http_code" == "200" || "$http_code" == "202" ]]; then
              echo "✅ Successfully submitted $(wc -l < urls_to_submit.txt) URLs to IndexNow"
            else
              echo "❌ Failed to submit URLs. HTTP Status: $http_code"
              echo "$response"
              exit 1
            fi
          fi

      - name: Commit and push sitemap.xml (use origin + GITHUB_TOKEN)
        shell: bash
        run: |
          set -euo pipefail
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions[bot]"
          git add sitemap.xml
          if git diff --staged --quiet; then
            echo "No changes to sitemap.xml"
            exit 0
          fi
          git commit -m "Auto-update sitemap.xml"
          # DO NOT unset the extraheader here; it carries the token from checkout
          git push origin HEAD:${GITHUB_REF_NAME:-${{ github.ref_name }}}
